--- SOA FAENA ---

Para el E1.Check:
------------------
- En hardware.c activar interrupciones reloj teclado. (Registro pasa a 0xFE)

- Habilitar interrupciones (inter reloj / inter teclado) en interrupt.c. No necesitan wrapper. Esto obliga a crear los handlers, en entry.S. (Guardar contexto, llamar función, restaurar). Reloj llama a zeos_show_clock. Teclado mostrar tecla pulsada.

- Habilitar puntos entrada sistema. Con SYSENTER en los wrappers se invocará al SO. Por tanto se requiere handler (guardar contexto usuario, comprobar, llamar rutina alto nivel, devolver resultado, salir con STI + SYSEXIT). Interrupt.c --- MSR --- wrmsr

- En sys.c hay que crear rutinas de atención write y gettime

- En wrapper.S crear el código de lo anterior en ensamblador. 

------------------------------

Del documento:

--- DONE: Activar interrupciones (en hardware.c, registro cambiado)
--- DONE: Implementar RESTORE_ALL (entry.S)
--- DONE: Implementar EOI (entry.S)
--- DONE: Inicializar IDT con el handler del teclado (interrupt.c, setTrapHandler)
--- DONE: Implementar Handler teclado
--- DONE: Implementar keyboard_routine (interrupt.c)
--- DONE: Implementar syscall_handler_sysenter (entry.S)
- Inicializar MSRs con el handler (writeMSR, etc)
--- DONE: sys_call_table con write
- Implementar wrapper write
--- DONE: Implementar rutina C de sys_write
--- DONE: Librería errno.h
- Implementar perror() (libc.c), requiere write completado

Interrupción reloj (más tarde, lo mismo que con el teclado a nivel de pasos)
