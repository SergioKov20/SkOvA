--- Workload 1: ---

Consiste en un bucle de la succesión de Fibonacci para generar carga de trabajo de CPU en los procesos que se crean.

- RR: Tiempo de usuario y ready muy parecido para ambos procesos debido a que este método funciona con quantum. 

- FCFS: Mismo tiempo de user por ser la misma función para ambos procesos, y tiempo de ready de 1 para el primer proceso debido a la política de esperar a la finalización del proceso en CPU.


--- Workload 2: ---

Consiste en cargas de trabajo de entrada y salida mediante reads.

- RR: Destaca por el tiempo de bloqueo elevado que provoca el segundo parametro del read.

- FCFS: Idéntico al RR en este caso.


--- Workload 3: ---

Mezcla de los dos anteriores.

Ambas políticas tienen las características de los dos workloads anteriores: Muchos ticks blocked por el read y tiempos de user parecidos por la faena que realizan. En el caso del RR se nota también el quantum en los tiempos de user y ready.
